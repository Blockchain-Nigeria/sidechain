<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenChain.Abstractions</name>
    </assembly>
    <members>
        <member name="T:OpenChain.ByteString">
            <summary>
            Represents an immutable string of binary data.
            </summary>
        </member>
        <member name="P:OpenChain.ByteString.Empty">
            <summary>
            Gets an empty <see cref="T:OpenChain.ByteString"/>.
            </summary>
        </member>
        <member name="P:OpenChain.ByteString.Value">
            <summary>
            Gets a read-only collection containing all the bytes in the <see cref="T:OpenChain.ByteString"/>.
            </summary>
        </member>
        <member name="M:OpenChain.ByteString.Parse(System.String)">
            <summary>
            Parses a <see cref="T:OpenChain.ByteString"/> from a hexadecimal string.
            </summary>
            <param name="hexValue">The hexadecimal string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:OpenChain.ByteString.ToByteArray">
            <summary>
            Returns a copy of the instance as an array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenChain.ByteString.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Copies the <see cref="T:OpenChain.ByteString"/> to a buffer.
            </summary>
            <param name="buffer">The destination buffer.</param>
            <param name="index">The index in the buffer to which to copy this <see cref="T:OpenChain.ByteString"/>.</param>
        </member>
        <member name="M:OpenChain.ByteString.ToStream">
            <summary>
            Returns a read-only stream containing the data represented by the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenChain.ByteString.Equals(OpenChain.ByteString)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:OpenChain.ByteString.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:OpenChain.ByteString.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpenChain.ByteString.ToString">
            <summary>
            Returns the hexadecimal representation of the current object.
            </summary>
            <returns>The hexadecimal representation of the current object.</returns>
        </member>
        <member name="T:OpenChain.ITransactionStore">
            <summary>
            Represents a data store for key-value pairs.
            </summary>
        </member>
        <member name="M:OpenChain.ITransactionStore.AddTransactions(System.Collections.Generic.IEnumerable{OpenChain.ByteString})">
            <summary>
            Adds a transaction to the store.
            </summary>
            <param name="transactions">A collection of serialized <see cref="T:OpenChain.Transaction"/> to add to the store.</param>
            <exception cref="T:OpenChain.ConcurrentMutationException">A record has been mutated and the transaction is no longer valid.</exception>
            <returns>A task that represents the completion of the operation.</returns>
        </member>
        <member name="M:OpenChain.ITransactionStore.GetRecords(System.Collections.Generic.IEnumerable{OpenChain.ByteString})">
            <summary>
            Gets the current records for a set of keys.
            </summary>
            <param name="keys">The keys to query.</param>
            <returns>A task that represents the completion of the operation and contains a list of the corresponding <see cref="T:OpenChain.Record"/>.</returns>
        </member>
        <member name="M:OpenChain.ITransactionStore.GetLastTransaction">
            <summary>
            Gets the hash of the last transaction in the ledger.
            </summary>
            <returns>A task that represents the completion of the operation and contains the hash of the last transaction.</returns>
        </member>
        <member name="M:OpenChain.ITransactionStore.GetTransactionStream(OpenChain.ByteString)">
            <summary>
            Gets the transactions following the one whose hash has been provided.
            </summary>
            <param name="from">The hash of the transaction to start streaming from.</param>
            <returns>An observable representing the transaction stream.</returns>
        </member>
        <member name="M:OpenChain.MessageSerializer.SerializeMutation(OpenChain.Mutation)">
            <summary>
            Serializes a <see cref="T:OpenChain.Mutation"/> into a byte array.
            </summary>
            <param name="mutation">The mutation to serialize.</param>
            <returns>The serialized mutation.</returns>
        </member>
        <member name="M:OpenChain.MessageSerializer.DeserializeMutation(OpenChain.ByteString)">
            <summary>
            Deserialize a <see cref="T:OpenChain.Mutation"/> from binary data.
            </summary>
            <param name="data">The binary data to deserialize.</param>
            <returns>The deserialized <see cref="T:OpenChain.Mutation"/>.</returns>
        </member>
        <member name="M:OpenChain.MessageSerializer.SerializeTransaction(OpenChain.Transaction)">
            <summary>
            Serializes a <see cref="T:OpenChain.Transaction"/> into a byte array.
            </summary>
            <param name="transaction">The transaction to serialize.</param>
            <returns>The serialized transaction.</returns>
        </member>
        <member name="M:OpenChain.MessageSerializer.DeserializeTransaction(OpenChain.ByteString)">
            <summary>
            Deserialize a <see cref="T:OpenChain.Transaction"/> from binary data.
            </summary>
            <param name="data">The binary data to deserialize.</param>
            <returns>The deserialized <see cref="T:OpenChain.Transaction"/>.</returns>
        </member>
        <member name="M:OpenChain.MessageSerializer.ComputeHash(System.Byte[])">
            <summary>
            Calculates the hash of an array of bytes.
            </summary>
            <param name="data">The data to hash.</param>
            <returns>The result of the hash.</returns>
        </member>
        <member name="T:OpenChain.Mutation">
            <summary>
            Represent a mutation performed on a set of data records.
            </summary>
        </member>
        <member name="P:OpenChain.Mutation.Namespace">
            <summary>
            Gets the namespace in which the mutation operates.
            </summary>
        </member>
        <member name="P:OpenChain.Mutation.Records">
            <summary>
            Gets a collection containing all the records being affected by the mutation.
            </summary>
        </member>
        <member name="P:OpenChain.Mutation.Metadata">
            <summary>
            Gets the metadata associated with the mutation.
            </summary>
        </member>
        <member name="T:OpenChain.Record">
            <summary>
            Represents a data record identified by a key and a version, and containing a value.
            </summary>
        </member>
        <member name="P:OpenChain.Record.Key">
            <summary>
            Gets the key of the record.
            </summary>
        </member>
        <member name="P:OpenChain.Record.Value">
            <summary>
            Gets the value of the record.
            </summary>
        </member>
        <member name="P:OpenChain.Record.Version">
            <summary>
            Gets the version of the record.
            </summary>
        </member>
        <member name="T:OpenChain.Transaction">
            <summary>
            Represents a transaction affecting the data store.
            </summary>
        </member>
        <member name="P:OpenChain.Transaction.Mutation">
            <summary>
            Gets the binary representation of the mutation applied by this transaction.
            </summary>
        </member>
        <member name="P:OpenChain.Transaction.Timestamp">
            <summary>
            Gets the timestamp of the transaction.
            </summary>
        </member>
        <member name="P:OpenChain.Transaction.TransactionMetadata">
            <summary>
            Gets the metadata associated with the transaction.
            </summary>
        </member>
    </members>
</doc>
